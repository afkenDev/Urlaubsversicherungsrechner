import React, { useState } from 'react';
import './App.css';
import PlaneImage from './components/plane.js';
import Button from './components/Button';

function App() {
  const [showStartPage, setShowStartPage] = useState(true);
  const [showQuestionPage, setShowQuestionPage] = useState(false);
  const [animatePlane, setAnimatePlane] = useState(false);
  const [adultCount, setAdultCount] = useState(0);
  const [kidCount, setKidCount] = useState(0);
  const [petCount, setPetCount] = useState(0);
  const [errorMessage, setErrorMessage] = useState(''); // Neue Variable fÃ¼r Fehlermeldung

  const handleButtonClick = () => {
    if (showStartPage) {
      setAnimatePlane(true);

      setTimeout(() => {
        setShowStartPage(false);
        setShowQuestionPage(true);
      }, 1888);
    }
  };

  const handleAnimationEnd = () => {};

  const increment = (inputId) => {
    let inputValue = parseInt(document.getElementById(inputId).value);
    let newValue;

    if (inputId === 'erwachsene') {
      newValue = inputValue + 1;
      setAdultCount(newValue);
    } else if (inputId === 'kinder') {
      newValue = inputValue + 1;
      setKidCount(newValue);
    } else if (inputId === 'haustiere') {
      newValue = inputValue + 1;
      setPetCount(newValue);
    }

    // Grenze setzten 
    if (newValue > 10) {
      newValue = 10; // Maximalzahl auf 10 setzen
    } else {
    }

    document.getElementById(inputId).value = newValue;
  };

  const decrement = (inputId) => {
    let inputValue = parseInt(document.getElementById(inputId).value);
    let newValue = Math.max(inputValue - 1, 0);

    if (inputId === 'erwachsene') {
      setAdultCount(newValue);
    } else if (inputId === 'kinder') {
      setKidCount(newValue);
    } else if (inputId === 'haustiere') {
      setPetCount(newValue);
    }

    document.getElementById(inputId).value = newValue;
  };

  const onClickWeiter1 = () => {
  console.log("onClick");
}

  return (
    <div className="App">
      {showStartPage && (
        <div className="App-header">
          <h1>Urlaubsversicherungsrechner</h1>
          <div className="frage">Wollen Sie sich im Ausland sicher fÃ¼hlen?</div>
          <div>
            <Button onClick={handleButtonClick}>Start â­¢</Button>
          </div>
        </div>
      )}

      {showQuestionPage && (
        <div className="App-header">
          <div className="anzeige">
            <span className="schritt" style={{ fontWeight: 'bold', textDecoration: 'underline'}}>â–  Schritt 1</span>
            <span className="schritt">â–¡ Schritt 2</span>
            <span className="schritt">â–¡ Schritt 3</span>
            <span className="schritt">â–¡ Schritt 4</span>
            <span className="schritt">â–¡ Schritt 5</span>
          </div>
          <h1>Wie viele Personen wollen Sie mitversichern?</h1>
          <div className="frage">
            ðŸ›ˆ Bitte beachten Sie bitte, dass Sie nur Leute von Ihrem Haushalt hinzufÃ¼gen dÃ¼rfen. Haustiere sind u. a. Katzen und Hunde.
          </div>
          <div className="form-container">
            {['Erwachsene (17+)', 'Kinder (17-)', 'Haustiere'].map((label, index) => {
              const id = label.split(' ')[0].toLowerCase();
              const countVar =
                id === 'erwachsene'
                  ? adultCount
                  : id === 'kinder'
                  ? kidCount
                  : petCount;
              return (
                <div className="form-group" key={index}>
                  <label htmlFor={id}>{label}</label>
                  <input type="number" id={id} min="0" defaultValue="0" disabled/>
                  <button className="btn" onClick={() => increment(id)}>+</button>
                  <button className="btn" onClick={() => decrement(id)}>-</button>
                </div>
              );
            })}
          </div>
          <Button onClickWeiter1={}>Weiter â­¢</Button>
        </div>
        
      )}
        


      {animatePlane && <PlaneImage onAnimationEnd={handleAnimationEnd} />}
    </div>
  
  );
}

export default App;